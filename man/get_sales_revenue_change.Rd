% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_sales_revenue_change.R
\name{get_sales_revenue_change}
\alias{get_sales_revenue_change}
\title{Calculate Sales and Revenue Changes Due to Price Adjustment}
\usage{
get_sales_revenue_change(sku, price_change_pct, sku_optimisation_results, df)
}
\arguments{
\item{sku}{An identifier (numeric or character) specifying which SKU to analyze.}

\item{price_change_pct}{A numeric value indicating the percentage price change 
to be applied. For example, \code{5} corresponds to a 5\% price increase, 
and \code{-10} corresponds to a 10\% price decrease.}

\item{sku_optimisation_results}{A data frame (e.g., the output of 
\code{\link{optimise_by_sku}}) containing at least two columns: 
\itemize{
  \item \code{sku}: SKU identifier (matching \code{sku} above).
  \item \code{elasticity}: Own-price elasticity value for each SKU.
  \item \code{competitor_elasticity}: Competitor-price elasticity for each SKU.
}}

\item{df}{A data frame of historical data containing (at a minimum):
\describe{
  \item{\code{sku}}{SKU identifier.}
  \item{\code{week}}{A date or date-like string representing the week.}
  \item{\code{price}}{Numeric, the current (observed) price for the SKU.}
  \item{\code{weekly_sales}}{Numeric, the observed weekly sales volume.}
}}
}
\value{
A list with two major components:
\itemize{
  \item \code{results}: A data frame with one row containing:
    \describe{
      \item{\code{date}}{The date.}
      \item{\code{new_sales_qty}}{The new (predicted) sales volume after the price change.}
      \item{\code{old_revenue}}{Revenue before the price change (\code{current_sales * current_price}).}
      \item{\code{new_revenue}}{Predicted revenue after the price change.}
      \item{\code{sales_qty_change_pct}}{Percentage change in sales volume.}
      \item{\code{revenue_change_pct}}{Percentage change in revenue.}
      \item{\code{new_price}}{The new price (current price multiplied by \code{1 + price_change_pct/100}).}
    }
  \item \code{price_change_pct}: The input \code{price_change_pct}.
  \item \code{price_elasticity}: The SKU's own-price elasticity extracted from \code{sku_optimisation_results}.
  \item \code{competitor_price_elasticity}: The SKU's competitor price elasticity extracted 
    from \code{sku_optimisation_results}.
}
}
\description{
\code{get_sales_revenue_change} computes the impact of a percentage price change on 
an SKU's sales quantity and revenue, given elasticity parameters from prior optimization.
}
\details{
The function applies a basic own-price elasticity formula:
\deqn{
  \text{new\_quantity} = \text{old\_quantity} \times \left(\frac{\text{new\_price}}{\text{old\_price}}\right)^{-\text{elasticity}}
}
to estimate how sales volume changes in response to a price change. 
It then computes the new revenue (\emph{new sales} times \emph{new price}), 
and calculates the percentage changes relative to the original values.
}
\examples{
\dontrun{
# Suppose you have a data frame 'df_w_competitor' with columns
# (sku, week, price, weekly_sales), and a data frame
# 'elasticity_results' containing sku, elasticity, competitor_elasticity.

result_list <- calculate_sales_revenue_change(
  sku = 1,
  price_change_pct = 5,
  sku_optimisation_results = elasticity_results,
  df = df_w_competitor
)

# Inspect the returned information:
result_list$results
}

}
